{"version":3,"sources":["../../src/country/country.controller.js"],"names":["router","get","req","res","getCountryList","then","json","data","catch","err","params","id","delete","deleteCountry","post","country","body","addCountry","put"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAMA,SAAS,sBAAf;AACA;;;;;;;;;;;;;;AAcAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,oBACGC,cADH,GAEGC,IAFH,CAEQ;AAAA,WAAQF,IAAIG,IAAJ,CAASC,IAAT,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS;AAAA,WAAOL,IAAIG,IAAJ,CAASG,GAAT,CAAP;AAAA,GAHT;AAID,CALD;;AAOA;;;;;;;;;;;;;;;;;;;;;;AAsBAT,OAAOC,GAAP,CAAW,MAAX,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,oBACGC,cADH,CACkBF,IAAIQ,MAAJ,CAAWC,EAD7B,EAEGN,IAFH,CAEQ;AAAA,WAAQF,IAAIG,IAAJ,CAASC,IAAT,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS;AAAA,WAAOL,IAAIG,IAAJ,CAASG,GAAT,CAAP;AAAA,GAHT;AAID,CALD;;AAOA;;;;;;;;;;;;;;;;;;;;;AAqBAT,OAAOY,MAAP,CAAc,MAAd,EAAsB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAClC,oBACGU,aADH,CACiBX,IAAIQ,MAAJ,CAAWC,EAD5B,EAEGN,IAFH,CAEQ;AAAA,WAAQF,IAAIG,IAAJ,CAASC,IAAT,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS;AAAA,WAAOL,IAAIG,IAAJ,CAASG,GAAT,CAAP;AAAA,GAHT;AAID,CALD;;AAOA;;;;;;;;;;;;;;;;;;;;;AAqBAT,OAAOc,IAAP,CAAY,GAAZ,EAAiB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAIY,UAAUb,IAAIc,IAAlB;AACA,oBACGC,UADH,CACcF,OADd,EAEGV,IAFH,CAEQ;AAAA,WAAQF,IAAIG,IAAJ,CAASC,IAAT,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS;AAAA,WAAOL,IAAIG,IAAJ,CAASG,GAAT,CAAP;AAAA,GAHT;AAID,CAND;;AAQA;;;;;;;;;;;;;;;;;;;;;AAqBAT,OAAOkB,GAAP,CAAW,GAAX,EAAgB,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAIY,UAAUb,IAAIc,IAAlB;AACA,oBACGC,UADH,CACcF,OADd,EAEGV,IAFH,CAEQ;AAAA,WAAQF,IAAIG,IAAJ,CAASC,IAAT,CAAR;AAAA,GAFR,EAGGC,KAHH,CAGS;AAAA,WAAOL,IAAIG,IAAJ,CAASG,GAAT,CAAP;AAAA,GAHT;AAID,CAND;;kBAQeT,M","file":"country.controller.js","sourcesContent":["import countryService from './country.service';\nimport { Router } from 'express';\n\nconst router = Router();\n/**\n * @swagger\n * /countries:\n *   get:\n *     summary: List all countries\n *     tags:\n *       - Countries\n *     responses:\n *       200:\n *         schema:\n *           type: array\n *           items:\n *             $ref: '#/definitions/Country'\n */\nrouter.get('/', (req, res) => {\n  countryService\n    .getCountryList()\n    .then(data => res.json(data))\n    .catch(err => res.json(err));\n});\n\n/**\n * \n * @swagger\n * /countries/{country_id}:\n *   get:\n *     summary: Get country by country_id\n *     tags:\n *       - Countries\n *     parameters:\n *       - name: country_id\n *         description: 'get by country_id id'\n *         in: path\n *         type: integer\n *         required: true\n *     responses:\n *       200:\n *         schema:\n *           type: object\n *           items:\n *             $ref: '#/definitions/Country'\n */\n\nrouter.get('/:id', (req, res) => {\n  countryService\n    .getCountryList(req.params.id)\n    .then(data => res.json(data))\n    .catch(err => res.json(err));\n});\n\n/**\n * \n * @swagger\n * /countries/{country_id}:\n *   delete:\n *     summary: Delete country by id\n *     tags:\n *       - Countries\n *     parameters:\n *       - name: country_id\n *         description: 'country_id'\n *         in: path\n *         type: integer\n *         required: true\n *     responses:\n *       200:\n *         schema:\n *           type: object\n *           items:\n *             $ref: '#/definitions/Country'\n */\nrouter.delete('/:id', (req, res) => {\n  countryService\n    .deleteCountry(req.params.id)\n    .then(data => res.json(data))\n    .catch(err => res.json(err));\n});\n\n/**\n * \n * @swagger\n * /countries:\n *   post:\n *     summary: Add country\n *     tags:\n *       - Countries\n *     consumes:\n *       - application/json\n *     parameters:\n *       - in : body\n *         name: country\n *         description: 'Add country'\n *         required: true\n *         schema:\n *           $ref: '#/definitions/Country'\n *     responses:\n *       201:\n *         description: Created\n */\nrouter.post('/', (req, res) => {\n  let country = req.body;\n  countryService\n    .addCountry(country)\n    .then(data => res.json(data))\n    .catch(err => res.json(err));\n});\n\n/**\n * \n * @swagger\n * /countries:\n *   put:\n *     summary: Update country\n *     tags:\n *       - Countries\n *     consumes:\n *       - application/json\n *     parameters:\n *       - in : body\n *         name: country\n *         description: 'Update country'\n *         required: true\n *         schema:\n *           $ref: '#/definitions/CountryPut'\n *     responses:\n *       201:\n *         description: Created\n */\nrouter.put('/', (req, res) => {\n  let country = req.body;\n  countryService\n    .addCountry(country)\n    .then(data => res.json(data))\n    .catch(err => res.json(err));\n});\n\nexport default router;\n"]}