{"version":3,"sources":["../../src/students/student.controller.js"],"names":["studentController","getAllStudents","req","res","query","parseInt","undefined","getStudent","err","data","send","success","results","student","getStudentList","students","forEach","s","push","error","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,QAAMC,QAAQC,SAASH,IAAIE,KAAJ,CAAU,GAAV,CAAT,KAA4BE,SAA1C;AACA,QAAI;AACF,UAAIF,KAAJ,EAAW;AACT,0BAAeG,UAAf,CAA0BH,KAA1B,EAAiC,UAACI,GAAD,EAAMC,IAAN,EAAe;AAC9C,cAAID,GAAJ,EAAS;AACPL,gBAAIO,IAAJ,CAAS;AACPC,uBAAS,KADF;AAEPC,uBAAS,uBAAuBJ;AAFzB,aAAT;;AAKA;AACD;;AAED,cAAIK,UAAU,sBAAYJ,IAAZ,CAAd;;AAEAN,cAAIO,IAAJ,CAAS;AACPC,qBAAS,IADF;AAEPC,qBAASC;AAFF,WAAT;AAID,SAhBD;AAiBD,OAlBD,MAkBO;AACL,0BAAeC,cAAf,CAA8B,UAACN,GAAD,EAAMC,IAAN,EAAe;AAC3C,cAAID,GAAJ,EAAS;AACPL,gBAAIO,IAAJ,CAAS;AACPC,uBAAS,KADF;AAEPC,uBAAS,uBAAuBJ;AAFzB,aAAT;;AAKA;AACD;;AAED,cAAIO,WAAW,EAAf;AACAN,eAAKO,OAAL,CAAa,UAASC,CAAT,EAAY;AACvB,gBAAIJ,UAAU,sBAAYI,CAAZ,CAAd;AACAF,qBAASG,IAAT,CAAcL,OAAd;AACD,WAHD;;AAKAV,cAAIO,IAAJ,CAAS;AACPC,qBAAS,IADF;AAEPC,qBAASG;AAFF,WAAT;AAID,SApBD;AAqBD;AACF,KA1CD,CA0CE,OAAOI,KAAP,EAAc;AACdhB,UAAIO,IAAJ,CAAS;AACPC,iBAAS,KADF;AAEPS,iBAAS,wBAAwBD;AAF1B,OAAT;AAID;AACF,GAlDD;;AAoDA,SAAO;AACLlB,oBAAgBA;AADX,GAAP;AAGD,CAxDD;;kBA0DeD,iB","file":"student.controller.js","sourcesContent":["import studentService from './student.service';\nimport Student from '../models/student';\n\nconst studentController = () => {\n  const getAllStudents = (req, res) => {\n    const query = parseInt(req.query['q']) || undefined;\n    try {\n      if (query) {\n        studentService.getStudent(query, (err, data) => {\n          if (err) {\n            res.send({\n              success: false,\n              results: 'Unable to get data' + err,\n            });\n\n            return;\n          }\n\n          let student = new Student(data);\n\n          res.send({\n            success: true,\n            results: student,\n          });\n        });\n      } else {\n        studentService.getStudentList((err, data) => {\n          if (err) {\n            res.send({\n              success: false,\n              results: 'Unable to get data' + err,\n            });\n\n            return;\n          }\n\n          let students = [];\n          data.forEach(function(s) {\n            let student = new Student(s);\n            students.push(student);\n          }, this);\n\n          res.send({\n            success: true,\n            results: students,\n          });\n        });\n      }\n    } catch (error) {\n      res.send({\n        success: false,\n        message: 'Unable to get data ' + error,\n      });\n    }\n  };\n\n  return {\n    getAllStudents: getAllStudents,\n  };\n};\n\nexport default studentController;\n"]}