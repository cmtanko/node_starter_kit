{"version":3,"sources":["../../src/students/student.controller.js"],"names":["studentController","getAllStudents","req","res","query","parseInt","undefined","getStudent","err","data","send","success","results","student","getStudentList","students","forEach","s","push","error","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,YAAMC,QAAQC,SAASH,IAAIE,KAAJ,CAAU,GAAV,CAAT,KAA4BE,SAA1C;AACA,YAAI;AACA,gBAAIF,KAAJ,EAAW;AACP,kCAAeG,UAAf,CAA0BH,KAA1B,EAAiC,UAACI,GAAD,EAAMC,IAAN,EAAe;AAC5C,wBAAID,GAAJ,EAAS;AACLL,4BAAIO,IAAJ,CAAS;AACLC,qCAAS,KADJ;AAELC,qCAAS,uBAAuBJ;AAF3B,yBAAT;AAIA;AACH;;AAED,wBAAIK,UAAU,sBAAYJ,IAAZ,CAAd;;AAEAN,wBAAIO,IAAJ,CAAS;AACLC,iCAAS,IADJ;AAELC,iCAASC;AAFJ,qBAAT;AAIH,iBAfD;AAgBH,aAjBD,MAiBO;AACH,kCAAeC,cAAf,CAA8B,UAACN,GAAD,EAAMC,IAAN,EAAe;AACzC,wBAAID,GAAJ,EAAS;AACLL,4BAAIO,IAAJ,CAAS;AACLC,qCAAS,KADJ;AAELC,qCAAS,uBAAuBJ;AAF3B,yBAAT;AAIA;AACH;;AAED,wBAAIO,WAAW,EAAf;AACAN,yBAAKO,OAAL,CAAa,UAAUC,CAAV,EAAa;AACtB,4BAAIJ,UAAU,sBAAYI,CAAZ,CAAd;AACAF,iCAASG,IAAT,CAAcL,OAAd;AACH,qBAHD;;AAKAV,wBAAIO,IAAJ,CAAS;AACLC,iCAAS,IADJ;AAELC,iCAASG;AAFJ,qBAAT;AAIH,iBAnBD;AAoBH;AACJ,SAxCD,CAwCE,OAAOI,KAAP,EAAc;AACZhB,gBAAIO,IAAJ,CAAS;AACLC,yBAAS,KADJ;AAELS,yBAAS,wBAAwBD;AAF5B,aAAT;AAIH;AACJ,KAhDD;;AAkDA,WAAO;AACHlB,wBAAgBA;AADb,KAAP;AAGH,CAtDD;;kBAwDeD,iB","file":"student.controller.js","sourcesContent":["import axios from 'axios';\nimport _ from 'lodash';\nimport studentService from './student.service';\nimport Student from '../models/student';\n\nconst studentController = () => {\n    const getAllStudents = (req, res) => {\n        const query = parseInt(req.query['q']) || undefined;\n        try {\n            if (query) {\n                studentService.getStudent(query, (err, data) => {\n                    if (err) {\n                        res.send({\n                            success: false,\n                            results: \"Unable to get data\" + err\n                        });\n                        return;\n                    }\n\n                    let student = new Student(data);\n\n                    res.send({\n                        success: true,\n                        results: student\n                    })\n                });\n            } else {\n                studentService.getStudentList((err, data) => {\n                    if (err) {\n                        res.send({\n                            success: false,\n                            results: \"Unable to get data\" + err\n                        });\n                        return;\n                    }\n\n                    let students = [];\n                    data.forEach(function (s) {\n                        let student = new Student(s);\n                        students.push(student);\n                    }, this);\n\n                    res.send({\n                        success: true,\n                        results: students\n                    })\n                });\n            }\n        } catch (error) {\n            res.send({\n                success: false,\n                message: \"Unable to get data \" + error\n            })\n        }\n    };\n\n    return {\n        getAllStudents: getAllStudents\n    };\n};\n\nexport default studentController;"]}