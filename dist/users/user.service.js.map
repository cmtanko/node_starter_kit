{"version":3,"sources":["../../src/users/user.service.js"],"names":["getUserList","deleteUser","addUser","id","where","join","whereRaw","select","then","rows","tree","grow","address","getData","del","user","userId","get","transaction","trx","insert","into","ids","address_id","update"],"mappings":";;;;;QAIgBA,W,GAAAA,W;QAkCAC,U,GAAAA,U;QAOAC,O,GAAAA,O;;AA7ChB;;;;AACA;;;;AACA;;;;;;AAEO,SAASF,WAAT,CAAqBG,EAArB,EAAyB;AAC9B,MAAIC,QAAQ,EAAZ;AACA,MAAID,EAAJ,EAAQ;AACNC,6BAAuBD,EAAvB;AACD;;AAED,SAAO,kBAAG,WAAH,EACJE,IADI,CACC,cADD,EACiB,cADjB,EACiC,cADjC,EAEJA,IAFI,CAEC,WAFD,EAEc,WAFd,EAE2B,WAF3B,EAGJA,IAHI,CAGC,eAHD,EAGkB,eAHlB,EAGmC,cAHnC,EAIJC,QAJI,CAIKF,KAJL,EAKJG,MALI,CAMH,2BANG,EAOH,yBAPG,EAQH,kBARG,EASH,wBATG,EAUH,+BAVG,EAWH,gCAXG,EAYH,gCAZG,EAaH,wBAbG,EAcH,+BAdG,EAeH,0BAfG,EAgBH,sCAhBG,EAkBJC,IAlBI,CAkBC,UAASC,IAAT,EAAe;AACnB,QAAIC,OAAO,uBAAX;AACAA,SAAKC,IAAL,CAAUF,IAAV;AACA,QAAIG,UAAUF,KAAKG,OAAL,EAAd;;AAEA,WAAOD,OAAP;AACD,GAxBI,EAyBJJ,IAzBI,EAAP;AA0BD;;AAEM,SAASP,UAAT,CAAoBE,EAApB,EAAwB;AAC7B,SAAO,kBAAG,MAAH,EACJC,KADI,CACE,SADF,EACaD,EADb,EAEJW,GAFI,GAGJN,IAHI,EAAP;AAID;;AAEM,SAASN,OAAT,CAAiBa,IAAjB,EAAuB;AAC5B,MAAIC,SAAS,iBAAEC,GAAF,CAAMF,IAAN,EAAY,SAAZ,CAAb;AACA,MAAIH,UAAUG,KAAKH,OAAnB;AACA,SAAOG,KAAKH,OAAZ;;AAEA,SAAO,aAAGM,WAAH,CAAe,UAASC,GAAT,EAAc;AAClC,QAAIH,MAAJ,EAAY;AACV,aAAOG,IACJC,MADI,CACGR,OADH,EACY,YADZ,EAEJS,IAFI,CAEC,SAFD,EAGJb,IAHI,CAGC,UAASc,GAAT,EAAc;AAClBP,aAAKQ,UAAL,GAAkBD,IAAI,CAAJ,CAAlB;;AAEA,eAAOH,IACJK,MADI,CACGT,IADH,EACS,SADT,EAEJX,KAFI,CAEE,SAFF,EAEaY,MAFb,EAGJK,IAHI,CAGC,MAHD,CAAP;AAID,OAVI,CAAP;AAWD,KAZD,MAYO;AACL,aAAOF,IACJC,MADI,CACGR,OADH,EACY,YADZ,EAEJS,IAFI,CAEC,SAFD,EAGJb,IAHI,CAGC,UAASc,GAAT,EAAc;AAClBP,aAAKQ,UAAL,GAAkBD,IAAI,CAAJ,CAAlB;;AAEA,eAAOH,IAAIC,MAAJ,CAAWL,IAAX,EAAiB,SAAjB,EAA4BM,IAA5B,CAAiC,MAAjC,CAAP;AACD,OAPI,CAAP;AAQD;AACF,GAvBM,CAAP;AAwBD;;kBAEc;AACbrB,0BADa;AAEbC,wBAFa;AAGbC;AAHa,C","file":"user.service.js","sourcesContent":["import db from '../db';\nimport Treeize from 'treeize';\nimport _ from 'lodash';\n\nexport function getUserList(id) {\n  let where = '';\n  if (id) {\n    where = `u.user_id = ${id}`;\n  }\n\n  return db('user as u')\n    .join('address as a', 'a.address_id', 'u.address_id')\n    .join('city as c', 'a.city_id', 'c.city_id')\n    .join('country as ry', 'ry.country_id', 'c.country_id')\n    .whereRaw(where)\n    .select(\n      'u.first_name as firstname',\n      'u.last_name as lastname',\n      'u.email as email',\n      'u.activebool as active',\n      'a.address as address:address1',\n      'a.address2 as address:address2',\n      'a.district as address:district',\n      'c.city as address:city',\n      'ry.country as address:country',\n      'a.phone as address:phone',\n      'a.postal_code as address:postal_code'\n    )\n    .then(function(rows) {\n      let tree = new Treeize();\n      tree.grow(rows);\n      let address = tree.getData();\n\n      return address;\n    })\n    .then();\n}\n\nexport function deleteUser(id) {\n  return db('user')\n    .where('user_id', id)\n    .del()\n    .then();\n}\n\nexport function addUser(user) {\n  let userId = _.get(user, 'user_id');\n  let address = user.address;\n  delete user.address;\n\n  return db.transaction(function(trx) {\n    if (userId) {\n      return trx\n        .insert(address, 'address_id')\n        .into('address')\n        .then(function(ids) {\n          user.address_id = ids[0];\n\n          return trx\n            .update(user, 'user_id')\n            .where('user_id', userId)\n            .into('user');\n        });\n    } else {\n      return trx\n        .insert(address, 'address_id')\n        .into('address')\n        .then(function(ids) {\n          user.address_id = ids[0];\n\n          return trx.insert(user, 'user_id').into('user');\n        });\n    }\n  });\n}\n\nexport default {\n  getUserList,\n  deleteUser,\n  addUser,\n};\n"]}