{"version":3,"sources":["../src/api.js"],"names":["process","env","NODE_ENV","require","load","app","APP_PORT","APP_HOST","set","locals","title","APP_NAME","version","APP_VERSION","use","json","static","join","__dirname","get","req","res","setHeader","send","JSON","stringify","listen","log"],"mappings":";;;;;;AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,UAAQ,QAAR,EAAkBC,IAAlB;AACD;;AAED,IAAMC,MAAM,wBAAZ;AACA,IAAMC,WAAWN,QAAQC,GAAR,CAAYK,QAAZ,IAAwB,IAAzC;AACA,IAAMC,WAAWP,QAAQC,GAAR,CAAYM,QAAZ,IAAwB,WAAzC;;AAEAF,IAAIG,GAAJ,CAAQ,MAAR,EAAgBF,QAAhB;AACAD,IAAIG,GAAJ,CAAQ,MAAR,EAAgBD,QAAhB;AACAF,IAAII,MAAJ,CAAWC,KAAX,GAAmBV,QAAQC,GAAR,CAAYU,QAA/B;AACAN,IAAII,MAAJ,CAAWG,OAAX,GAAqBZ,QAAQC,GAAR,CAAYY,WAAjC;;AAEAR,IAAIS,GAAJ,CAAQ,qBAAR;AACAT,IAAIS,GAAJ,CAAQ,uBAAR;AACAT,IAAIS,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAT,IAAIS,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAV,IAAIS,GAAJ,CAAQ,kBAAQE,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CAAf,CAAR;AACAb,IAAIS,GAAJ,CAAQ,MAAR;;AAEA;AACAT,IAAIc,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCA,MAAIC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACAD,MAAIE,IAAJ;AACD,CAHD;;AAKAlB,IAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIE,IAAJ,CACE,0EACE,yHADF,GAEE,sNAFF,GAGE,sBAHF,GAIElB,IAAIc,GAAJ,CAAQ,MAAR,CAJF,GAKE,GALF,GAMEd,IAAIc,GAAJ,CAAQ,MAAR,CANF,GAOE,sDAPF,GAQE,QARF,GASEnB,QAAQC,GAAR,CAAYC,QATd,GAUEsB,KAAKC,SAAL,CAAezB,QAAQC,GAAvB,CAXJ;AAaD,CAdD;;AAgBAI,IAAIqB,MAAJ,CAAWpB,QAAX,EAAqB,YAAM;AACzB,mBAAOqB,GAAP,CAAW,MAAX,yBAAwCtB,IAAIc,GAAJ,CAAQ,MAAR,CAAxC,SAA2Dd,IAAIc,GAAJ,CAAQ,MAAR,CAA3D;AACD,CAFD;;kBAIed,G","file":"api.js","sourcesContent":["import 'babel-polyfill';\n\nimport cors from 'cors';\nimport path from 'path';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport routes from './routes';\nimport express from 'express';\nimport logger from './utils/logger';\nimport bodyParser from 'body-parser';\nimport swaggerSpec from './utils/swagger';\n\nif (process.env.NODE_ENV !== 'production') {\n  require('dotenv').load();\n}\n\nconst app = express();\nconst APP_PORT = process.env.APP_PORT || 3000;\nconst APP_HOST = process.env.APP_HOST || 'localhost';\n\napp.set('port', APP_PORT);\napp.set('host', APP_HOST);\napp.locals.title = process.env.APP_NAME;\napp.locals.version = process.env.APP_VERSION;\n\napp.use(cors());\napp.use(helmet());\napp.use(morgan('dev'));\napp.use(bodyParser.json());\napp.use(express.static(path.join(__dirname, '/../public')));\napp.use('/api', routes);\n\n// serve swagger\napp.get('/swagger.json', (req, res) => {\n  res.setHeader('Content-Type', 'application/json');\n  res.send(swaggerSpec);\n});\n\napp.get('/', (req, res) => {\n  res.send(\n    '<div style=\"margin:50px;\" ><h1>Created with Node Starter kit</h1><br>' +\n      '<p>There are various other node starter kit out there yet,<br> Created this one with specific dependencies Features:<p>' +\n      '<ul><li>EcmaScript 2015 /ES6</li> <li>Unit Testing Setup with Mocha/Chai</li> <li>Commit checking with Husky and Linting with ESLint</li> <li>Logger</li> <li>Swagger</li> <li>Process Management with PM2</li></ul>' +\n      '<br><a href=\"http://' +\n      app.get('host') +\n      ':' +\n      app.get('port') +\n      '/api-docs\" target=\"_blank\"> Documentation </a></div>' +\n      'ENV : ' +\n      process.env.NODE_ENV +\n      JSON.stringify(process.env)\n  );\n});\n\napp.listen(APP_PORT, () => {\n  logger.log('info', `Server started at ${app.get('host')}:${app.get('port')}`);\n});\n\nexport default app;\n"]}