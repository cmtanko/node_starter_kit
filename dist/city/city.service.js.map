{"version":3,"sources":["../../src/city/city.service.js"],"names":["getCityList","getCity","deleteCity","addCity","country","where","toLowerCase","join","select","whereRaw","orderBy","then","rows","tree","grow","cities","getData","id","del","city","cityId","get","update","insert"],"mappings":";;;;;QAIgBA,W,GAAAA,W;QAoBAC,O,GAAAA,O;QAgBAC,U,GAAAA,U;QAOAC,O,GAAAA,O;;AA/ChB;;;;AACA;;;;AACA;;;;;;AAEO,SAASH,WAAT,CAAqBI,OAArB,EAA8B;AACnC,MAAIC,QAAQ,EAAZ;AACA,MAAID,OAAJ,EAAa;AACXC,0CAAmCD,QAAQE,WAAR,EAAnC;AACD;;AAED,SAAO,kBAAG,WAAH,EACJC,IADI,CACC,eADD,EACkB,eADlB,EACmC,cADnC,EAEJC,MAFI,CAEG,uBAFH,EAE4B,YAF5B,EAGJC,QAHI,CAGKJ,KAHL,EAIJK,OAJI,CAII,QAJJ,EAKJC,IALI,CAKC,UAASC,IAAT,EAAe;AACnB,QAAIC,OAAO,uBAAX;AACAA,SAAKC,IAAL,CAAUF,IAAV;AACA,QAAIG,SAASF,KAAKG,OAAL,EAAb;;AAEA,WAAOD,MAAP;AACD,GAXI,EAYJJ,IAZI,EAAP;AAaD;AACM,SAASV,OAAT,CAAiBgB,EAAjB,EAAqB;AAC1B,SAAO,kBAAG,WAAH,EACJV,IADI,CACC,eADD,EACkB,eADlB,EACmC,cADnC,EAEJF,KAFI,CAEE,WAFF,EAEeY,EAFf,EAGJT,MAHI,CAGG,uBAHH,EAG4B,YAH5B,EAIJE,OAJI,CAII,QAJJ,EAKJC,IALI,CAKC,UAASC,IAAT,EAAe;AACnB,QAAIC,OAAO,uBAAX;AACAA,SAAKC,IAAL,CAAUF,IAAV;AACA,QAAIG,SAASF,KAAKG,OAAL,EAAb;;AAEA,WAAOD,MAAP;AACD,GAXI,EAYJJ,IAZI,EAAP;AAaD;;AAEM,SAAST,UAAT,CAAoBe,EAApB,EAAwB;AAC7B,SAAO,kBAAG,MAAH,EACJZ,KADI,CACE,SADF,EACaY,EADb,EAEJC,GAFI,GAGJP,IAHI,EAAP;AAID;;AAEM,SAASR,OAAT,CAAiBgB,IAAjB,EAAuB;AAC5B,MAAIC,SAAS,iBAAEC,GAAF,CAAMF,IAAN,EAAY,SAAZ,CAAb;AACA,MAAIC,MAAJ,EAAY;AACV,WAAO,kBAAG,MAAH,EACJE,MADI,CACGH,IADH,EACS,SADT,EAEJd,KAFI,CAEE,SAFF,EAEae,MAFb,EAGJT,IAHI,EAAP;AAID,GALD,MAKO;AACL,WAAO,kBAAG,MAAH,EACJY,MADI,CACGJ,IADH,EACS,SADT,EAEJR,IAFI,EAAP;AAGD;AACF;;kBAEc;AACbX,0BADa;AAEbC,kBAFa;AAGbC,wBAHa;AAIbC;AAJa,C","file":"city.service.js","sourcesContent":["import db from '../db';\nimport Treeize from 'treeize';\nimport _ from 'lodash';\n\nexport function getCityList(country) {\n  let where = '';\n  if (country) {\n    where = `LOWER(ry.country) like '${country.toLowerCase()}'`;\n  }\n\n  return db('city as c')\n    .join('country as ry', 'ry.country_id', 'c.country_id')\n    .select('c.city as cities:city', 'ry.country')\n    .whereRaw(where)\n    .orderBy('c.city')\n    .then(function(rows) {\n      let tree = new Treeize();\n      tree.grow(rows);\n      let cities = tree.getData();\n\n      return cities;\n    })\n    .then();\n}\nexport function getCity(id) {\n  return db('city as c')\n    .join('country as ry', 'ry.country_id', 'c.country_id')\n    .where('c.city_id', id)\n    .select('c.city as cities:city', 'ry.country')\n    .orderBy('c.city')\n    .then(function(rows) {\n      let tree = new Treeize();\n      tree.grow(rows);\n      let cities = tree.getData();\n\n      return cities;\n    })\n    .then();\n}\n\nexport function deleteCity(id) {\n  return db('city')\n    .where('city_id', id)\n    .del()\n    .then();\n}\n\nexport function addCity(city) {\n  let cityId = _.get(city, 'city_id');\n  if (cityId) {\n    return db('city')\n      .update(city, 'city_id')\n      .where('city_id', cityId)\n      .then();\n  } else {\n    return db('city')\n      .insert(city, 'city_id')\n      .then();\n  }\n}\n\nexport default {\n  getCityList,\n  getCity,\n  deleteCity,\n  addCity,\n};\n"]}